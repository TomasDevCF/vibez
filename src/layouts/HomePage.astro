---
import { db } from "astro:db";
import { Users } from "astro:db";
import AsideNav from "../components/AsideNav.astro";
import { eq } from "astro:db";
import SearchAside from "../components/SearchAside.astro";

export interface UserInfo {
  user_id: number;
  name: string;
  username: string;
  image: string | null;
  email: string;
  password: string | null;
  created_at: Date;
  description: string | null;
}

export interface Post {
  post_id: number;
  user_id: number;
  image: string | null;
  username: string;
  name: string;
  body: string;
  created_at: Date;
  followers?: number;
  likes_count: number;
  comments_count: number;
  is_comment?: boolean;
  commented_post_id?: number;
}

const accountId = Astro.cookies.get("accountId");
const { className } = Astro.props;

if (!accountId) {
  return Astro.redirect("/register");
}

const userInfo = await db
  .select()
  .from(Users)
  .where(eq(Users.user_id, parseInt(accountId.value)));

console.log(userInfo);
if (userInfo.length === 0) {
  Astro.cookies.delete("accountId");
  return Astro.redirect("/register");
}
---

<>
  <AsideNav userInfo={userInfo[0]} />
  <main
    class=`w-full h-full ${className ? className : "overflow-y-hidden"}`
    style="scrollbar-width: none;"
  >
    <slot />
  </main>
  <SearchAside userInfo={userInfo[0]} />
</>

<style is:global>
  body {
    background-color: rgb(26, 26, 26) !important;
    display: grid !important;
    grid-template-areas: "aside-l main aside-r";
    grid-template-columns: 250px 1fr 250px;
    max-width: 1024px;
    place-items: center;
  }
</style>
